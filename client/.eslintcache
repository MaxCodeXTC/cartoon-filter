[{"/Users/anandsimmy/web-dev/react-projects/cartoon-filter/client/src/index.js":"1","/Users/anandsimmy/web-dev/react-projects/cartoon-filter/client/src/App.js":"2"},{"size":221,"mtime":1611837377926,"results":"3","hashOfConfig":"4"},{"size":3435,"mtime":1612665339803,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"a7ncx4",{"filePath":"9","messages":"10","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"/Users/anandsimmy/web-dev/react-projects/cartoon-filter/client/src/index.js",[],["12","13"],"/Users/anandsimmy/web-dev/react-projects/cartoon-filter/client/src/App.js",["14","15","16"],"import React, { useEffect, useState } from 'react'\nimport './App.css';\n\nconst App=() => {\n\n  const [originalImageUrl, setOriginalImageUrl]= useState('')\n  const [filteredImageUrl, setFilteredImageUrl]= useState('')\n  const [uploadedImg, setUploadedImg]= useState('')\n\n  const uploadImg= (e) => {\n    setUploadedImg(e.target.files[0])\n  }\n\n  const closeModal= () => {\n      setFilteredImageUrl('')\n      const modal= document.querySelector('.modal')\n      const overlay= document.querySelector('.overlay')\n      modal.classList.remove('show')\n      overlay.classList.remove('show')\n  }\n\n  const convertToBase64String= (file, cb) => {\n    let myReader = new FileReader()\n    if (file && file.type.match('image.*')) {\n      myReader.readAsDataURL(file);\n    }\n    myReader.onloadend = function (e) {\n        cb(myReader.result);\n    };\n  }\n\n  const filterImage= async (file) => {\n    setOriginalImageUrl(file)\n    let image= await fetch('/filter', {\n      method: 'POST',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        img: file\n      })\n    })\n    image= await image.blob()\n    const objectURL = URL.createObjectURL(image)\n    setFilteredImageUrl(objectURL)\n  }\n\n  useEffect(()=>{\n    const uploadFileHandler= () => {\n      convertToBase64String(uploadedImg, filterImage)\n    }\n    if(uploadedImg){\n      const modal= document.querySelector('.modal')\n      const overlay= document.querySelector('.overlay')\n      uploadFileHandler()\n      modal.classList.add('show')\n      overlay.classList.add('show')\n    }\n  }, [uploadedImg])\n\n  return (\n    <div className=\"App\">\n      <div className='overlay' onClick={closeModal}></div>\n      <div className=\"main\">\n          { !filteredImageUrl &&\n            <>\n              <div className='title'>Cartoon Filter</div>\n              <button className=\"upload\" onClick={()=>document.getElementById('uploadImage').click()}>Upload Image</button>\n            </>\n          }   \n          <input type=\"file\" id=\"uploadImage\" onChange={uploadImg}\n            accept=\"image/x-png,image/gif,image/jpeg,image/jpg,image/png\" style={{display:'none'}}></input>\n          <div className=\"modal\">\n            {\n              filteredImageUrl && \n              <>\n                <div className='closeButton' onClick={closeModal}>\n                  <i class=\"fas fa-times\"></i>\n                  </div>\n                <div className='modal-title'>Converted Successfully!</div>\n                <div className='images'>\n                  <div className='originalImageContainer'>\n                    <img src={originalImageUrl} id='original' className='original-image' />\n                    <button><a className='downloadLink' href={filteredImageUrl} download='original.png'>Download Original <i class=\"fas fa-arrow-circle-down\"></i></a></button>\n                  </div>\n                  <img src={'img/convert.png'} className='convertIcon' />\n                  <div className='cartoonImageContainer'>\n                    <img src={filteredImageUrl} id='cartoon' className='cartoon-image' />\n                    <button><a className='downloadLink' href={filteredImageUrl} download='cartoon-filter.png'>Download <i class=\"fas fa-arrow-circle-down\"></i></a></button>\n                  </div>\n                </div>\n              </>\n            }\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","severity":1,"message":"22","line":84,"column":21,"nodeType":"23","endLine":84,"endColumn":92},{"ruleId":"21","severity":1,"message":"22","line":87,"column":19,"nodeType":"23","endLine":87,"endColumn":74},{"ruleId":"21","severity":1,"message":"22","line":89,"column":21,"nodeType":"23","endLine":89,"endColumn":90},"no-native-reassign",["24"],"no-negated-in-lhs",["25"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]